#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Author: Eric Kow
# License: BSD3

"""
Swiss-army-knife for working with PDTB corpora
"""

import argparse
import os
import xml.etree.cElementTree as ET

import educe.pdtb      as pdtb
import educe.pdtb.xml_ as pdtbx
import educe.util

# ---------------------------------------------------------------------
# xml
# ---------------------------------------------------------------------

def mk_output_path(odir, k):
    relpath        = pdtb.id_to_path(k)
    ofile_dirname  = os.path.join(odir, os.path.dirname(relpath))
    ofile_basename = os.path.basename(relpath)
    if not os.path.exists(ofile_dirname):
        os.makedirs(ofile_dirname)
    return os.path.join(ofile_dirname, ofile_basename)

def main_xml(args):
    is_interesting = educe.util.mk_is_interesting(args)
    reader     = pdtb.Reader(args.input)
    anno_files = reader.filter(reader.files(), is_interesting)
    corpus     = reader.slurp_subcorpus(anno_files, verbose=True)
    for k in sorted(corpus):
        opath = mk_output_path(args.output, k) + '.pdtbx'
        pdtbx.write_pdtbx_file(opath, corpus[k])
        #readback = pdtbx.read_pdtbx_file(opath)
        #assert(corpus[k] == readback)

# ---------------------------------------------------------------------
# args
# ---------------------------------------------------------------------

arg_parser = argparse.ArgumentParser(description='PDTB Swiss Army Knife')
subparsers = arg_parser.add_subparsers(help='sub-command help')

ap_xml = subparsers.add_parser('xml', help='Reformat in adhoc XML')
ap_xml.set_defaults(func=main_xml)
ap_xml.add_argument('input',  metavar='DIR', help='PDTB data dir')
ap_xml.add_argument('output', metavar='DIR', help='output XML dir')
educe.util.add_corpus_filters(ap_xml, fields=['doc'])

args = arg_parser.parse_args()
args.func(args)

# vim: syntax=python:
